import numpy as np

# 4 sensors
pSensor4 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, -4.89, 0],
])

# 5 sensors
pSensor5 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, -4.89, 0],
    [0, 0, 0],
])

# 6 sensors
pSensor6 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, 0, 0],
    [4.89, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, 0, 0],
    [-4.89, -4.89, 0],
])

# 7 sensors
pSensor7 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, 0, 0],
    [4.89, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, 0, 0],
    [-4.89, -4.89, 0],
    [0, 0, 0],
])

# 8 sensors
pSensor8 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, 0, 0],
    [4.89, -4.89, 0],
    [0, 4.89, 0],
    [0, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, 0, 0],
    [-4.89, -4.89, 0],
])

# 9 sensors
pSensor9 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, 0, 0],
    [4.89, -4.89, 0],
    [0, 4.89, 0],
    [0, 0, 0],
    [0, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, 0, 0],
    [-4.89, -4.89, 0],
])

# cube layout
pSensor_large_cube = 1e-2 * np.array([
    [4.89, 4.89, -4.9],
    [4.89, -4.89, -4.9],
    [-4.89, 4.89, -4.9],
    [-4.89, -4.89, -4.9],
    [4.89, 4.89, 4.9],
    [4.89, -4.89, 4.9],
    [-4.89, 4.89, 4.9],
    [-4.89, -4.89, 4.9],
])

pSensor_flat_cube = 1e-2 * np.array([
    [4.89, 4.89, -1.6],
    [4.89, -4.89, -1.6],
    [-4.89, 4.89, -1.6],
    [-4.89, -4.89, -1.6],
    [4.89, 4.89, 1.6],
    [4.89, -4.89, 1.6],
    [-4.89, 4.89, 1.6],
    [-4.89, -4.89, 1.6],
])

pSensor_smt = 1e-2 * np.array([
    [4.9, -4.9, -1.63],
    [-4.9, -4.9, -1.63],
    [4.9, 4.9, -1.63],
    [-4.9, 4.9, -1.63],
    [4.9, -4.9, 1.63],
    [-4.9, -4.9, 1.63],
    [4.9, 4.9, 1.63],
    [-4.9, 4.9, 1.63],
])

pSensor_large_smt = 1e-2 * np.array([
    [4.9, -4.9, -1.63],
    [-4.9, -4.9, -1.63],
    [4.9, 4.9, -1.63],
    [-4.9, 4.9, -1.63],
    [0, -4.9, 1.63],
    [-4.9, 0, 1.63],
    [4.9, 0, 1.63],
    [0, 4.9, 1.63],
])

pSensor_median_smt = 1e-2 * np.array([
    [4, -4, -1.63],
    [-4, -4, -1.63],
    [4, 4, -1.63],
    [-4, 4, -1.63],
    [0, -4, 1.63],
    [-4, 0, 1.63],
    [4, 0, 1.63],
    [0, 4, 1.63],
])

pSensor_small_smt = 1e-2 * np.array([
    [3, -3, -1.63],
    [-3, -3, -1.63],
    [3, 3, -1.63],
    [-3, 3, -1.63],
    [0, -3, 1.63],
    [-3, 0, 1.63],
    [3, 0, 1.63],
    [0, 3, 1.63],
])

line_distance = 10 
line_distance2 = 1
pSensor_2_line = 1e-2*np.array([
    [75, 0, 0],
    [65, 0, 0],
    [55, 0, 0],
    [45, 0, 0],
    [35, 0, 0],
    [25, 0, 0],
    [15, 0, 0],
    [5, 0, 0],
    [-5, 0, 0],
    [-15, 0, 0],
    [-25, 0, 0],
    [-35, 0, 0],
    [-45, 0, 0],
    [-55, 0, 0],
    [-65, 0, 0],
    [-75, 0, 0],
    [75, line_distance,0],
    [65, line_distance,0],
    [55, line_distance,0],
    [45, line_distance,0],
    [35, line_distance,0],
    [25, line_distance,0],
    [15, line_distance,0],
    [5, line_distance,0],
    [-5,  line_distance,0],
    [-15, line_distance,0],
    [-25, line_distance,0],
    [-35, line_distance,0],
    [-45, line_distance,0],
    [-55, line_distance,0],
    [-65, line_distance,0],
    [-75, line_distance,0]
])


pSensor_7_line = 1e-2*np.array([
    [-75, 6*line_distance,0],
    [-65, 6*line_distance,0],
    [-55, 6*line_distance,0],
    [-45, 6*line_distance,0],
    [-35, 6*line_distance,0],
    [-25, 6*line_distance,0],
    [-15, 6*line_distance,0],
    [-5, 6*line_distance,0],
    [5,  6*line_distance,0],
    [15, 6*line_distance,0],
    [25, 6*line_distance,0],
    [35, 6*line_distance,0],
    [45, 6*line_distance,0],
    [55, 6*line_distance,0],
    [65, 6*line_distance,0],
    [75, 6*line_distance,0],
    [-75, 5*line_distance,0],
    [-65, 5*line_distance,0],
    [-55, 5*line_distance,0],
    [-45, 5*line_distance,0],
    [-35, 5*line_distance,0],
    [-25, 5*line_distance,0],
    [-15, 5*line_distance,0],
    [-5, 5*line_distance,0],
    [5,  5*line_distance,0],
    [15, 5*line_distance,0],
    [25, 5*line_distance,0],
    [35, 5*line_distance,0],
    [45, 5*line_distance,0],
    [55, 5*line_distance,0],
    [65, 5*line_distance,0],
    [75, 5*line_distance,0],
    [-75, 4*line_distance,0],
    [-65, 4*line_distance,0],
    [-55, 4*line_distance,0],
    [-45, 4*line_distance,0],
    [-35, 4*line_distance,0],
    [-25, 4*line_distance,0],
    [-15, 4*line_distance,0],
    [-5, 4*line_distance,0],
    [5,  4*line_distance,0],
    [15, 4*line_distance,0],
    [25, 4*line_distance,0],
    [35, 4*line_distance,0],
    [45, 4*line_distance,0],
    [55, 4*line_distance,0],
    [65, 4*line_distance,0],
    [75, 4*line_distance,0],
    [-75, 3*line_distance,0],
    [-65, 3*line_distance,0],
    [-55, 3*line_distance,0],
    [-45, 3*line_distance,0],
    [-35, 3*line_distance,0],
    [-25, 3*line_distance,0],
    [-15, 3*line_distance,0],
    [-5, 3*line_distance,0],
    [5,  3*line_distance,0],
    [15, 3*line_distance,0],
    [25, 3*line_distance,0],
    [35, 3*line_distance,0],
    [45, 3*line_distance,0],
    [55, 3*line_distance,0],
    [65, 3*line_distance,0],
    [75, 3*line_distance,0],
    [-75, 2*line_distance,0],
    [-65, 2*line_distance,0],
    [-55, 2*line_distance,0],
    [-45, 2*line_distance,0],
    [-35, 2*line_distance,0],
    [-25, 2*line_distance,0],
    [-15, 2*line_distance,0],
    [-5, 2*line_distance,0],
    [5,  2*line_distance,0],
    [15, 2*line_distance,0],
    [25, 2*line_distance,0],
    [35, 2*line_distance,0],
    [45, 2*line_distance,0],
    [55, 2*line_distance,0],
    [65, 2*line_distance,0],
    [75, 2*line_distance,0],
    [-75, line_distance,0],
    [-65, line_distance,0],
    [-55, line_distance,0],
    [-45, line_distance,0],
    [-35, line_distance,0],
    [-25, line_distance,0],
    [-15, line_distance,0],
    [-5, line_distance,0],
    [5,  line_distance,0],
    [15, line_distance,0],
    [25, line_distance,0],
    [35, line_distance,0],
    [45, line_distance,0],
    [55, line_distance,0],
    [65, line_distance,0],
    [75, line_distance,0],
    [-75, 0, 0],
    [-65, 0, 0],
    [-55, 0, 0],
    [-45, 0, 0],
    [-35, 0, 0],
    [-25, 0, 0],
    [-15, 0, 0],
    [-5, 0, 0],
    [5, 0, 0],
    [15, 0, 0],
    [25, 0, 0],
    [35, 0, 0],
    [45, 0, 0],
    [55, 0, 0],
    [65, 0, 0],
    [75, 0, 0]
])

pSensor_8_line = 1e-2*np.array([
    [-17.5, 7*line_distance2,0],
    [-7.5, 7*line_distance2,0],
    [2.5, 7*line_distance2,0],
    [12.5, 7*line_distance2,0],
    [-12.5, 6*line_distance2,0.7],
    [-2.5, 6*line_distance2,0.7],
    [7.5, 6*line_distance2,0.7],
    [17.5, 6*line_distance2,0.7],
    [-17.5, 5*line_distance2,0],
    [-7.5, 5*line_distance2,0],
    [2.5, 5*line_distance2,0],
    [12.5, 5*line_distance2,0],
    [-12.5, 4*line_distance2,0.7],
    [-2.5, 4*line_distance2,0.7],
    [7.5, 4*line_distance2,0.7],
    [17.5, 4*line_distance2,0.7],
    [-17.5, 3*line_distance2,0],
    [-7.5, 3*line_distance2,0],
    [2.5, 3*line_distance2,0],
    [12.5, 3*line_distance2,0],
    [-12.5, 2*line_distance2,0.7],
    [-2.5, 2*line_distance2,0.7],
    [7.5, 2*line_distance2,0.7],
    [17.5, 2*line_distance2,0.7],
    [-17.5, 1*line_distance2,0],
    [-7.5, 1*line_distance2,0],
    [2.5, 1*line_distance2,0],
    [12.5, 1*line_distance2,0],
    [-12.5, 0*line_distance2,0.7],
    [-2.5, 0*line_distance2,0.7],
    [7.5, 0*line_distance2,0.7],
    [17.5, 0*line_distance2,0.7]
])

pSensor_8_line_vertical = 1e-2*np.array([
    [-12.5, 6*line_distance2,0.7],
    [-2.5, 6*line_distance2,0.7],
    [7.5, 6*line_distance2,0.7],
    [17.5, 6*line_distance2,0.7],
    [-12.5, 4*line_distance2,0.7],
    [-2.5, 4*line_distance2,0.7],
    [7.5, 4*line_distance2,0.7],
    [17.5, 4*line_distance2,0.7],
    [-12.5, 2*line_distance2,0.7],
    [-2.5, 2*line_distance2,0.7],
    [7.5, 2*line_distance2,0.7],
    [17.5, 2*line_distance2,0.7],
    [-12.5, 0*line_distance2,0.7],
    [-2.5, 0*line_distance2,0.7],
    [7.5, 0*line_distance2,0.7],
    [17.5, 0*line_distance2,0.7]
])

pSensor_8_line_horizontal = 1e-2*np.array([
    [-17.5, 7*line_distance2,0],
    [-7.5, 7*line_distance2,0],
    [2.5, 7*line_distance2,0],
    [12.5, 7*line_distance2,0],
    [-17.5, 5*line_distance2,0],
    [-7.5, 5*line_distance2,0],
    [2.5, 5*line_distance2,0],
    [12.5, 5*line_distance2,0],
    [-17.5, 3*line_distance2,0],
    [-7.5, 3*line_distance2,0],
    [2.5, 3*line_distance2,0],
    [12.5, 3*line_distance2,0],
    [-17.5, 1*line_distance2,0],
    [-7.5, 1*line_distance2,0],
    [2.5, 1*line_distance2,0],
    [12.5, 1*line_distance2,0],
])

pSensor_4_line_8 = 1e-2*np.array([
    [35, 3*line_distance, 0],
    [25, 3*line_distance, 0],
    [15, 3*line_distance, 0],
    [5, 3*line_distance, 0],
    [-5, 3*line_distance, 0],
    [-15, 3*line_distance, 0],
    [-25, 3*line_distance, 0],
    [-35, 3*line_distance, 0],
    [35, 2*line_distance, 0],
    [25, 2*line_distance, 0],
    [15, 2*line_distance, 0],
    [5, 2*line_distance, 0],
    [-5, 2*line_distance, 0],
    [-15, 2*line_distance, 0],
    [-25, 2*line_distance, 0],
    [-35, 2*line_distance, 0],
    [35, line_distance, 0],
    [25, line_distance, 0],
    [15, line_distance, 0],
    [5, line_distance, 0],
    [-5, line_distance, 0],
    [-15, line_distance, 0],
    [-25, line_distance, 0],
    [-35, line_distance, 0],
    [35, 0, 0],
    [25, 0, 0],
    [15, 0, 0],
    [5, 0, 0],
    [-5, 0, 0],
    [-15, 0, 0],
    [-25, 0, 0],
    [-35, 0, 0],
])


pSensor_4_line_8_wow = 1e-2*np.array([
    [30, 3*line_distance, 0],
    [20, 3*line_distance, 0],
    [10, 3*line_distance, 0],
    [0, 3*line_distance, 0],
    [-10, 3*line_distance, 0],
    [-20, 3*line_distance, 0],
    [-30, 3*line_distance, 0],
    [-40, 3*line_distance, 0],
    [35, 2*line_distance, 0],
    [25, 2*line_distance, 0],
    [15, 2*line_distance, 0],
    [5, 2*line_distance, 0],
    [-5, 2*line_distance, 0],
    [-15, 2*line_distance, 0],
    [-25, 2*line_distance, 0],
    [-35, 2*line_distance, 0],
    [30, line_distance, 0],
    [20, line_distance, 0],
    [10, line_distance, 0],
    [0, line_distance, 0],
    [-10, line_distance, 0],
    [-20, line_distance, 0],
    [-30, line_distance, 0],
    [-40, line_distance, 0],
    [35, 0, 0],
    [25, 0, 0],
    [15, 0, 0],
    [5, 0, 0],
    [-5, 0, 0],
    [-15, 0, 0],
    [-25, 0, 0],
    [-35, 0, 0],
])